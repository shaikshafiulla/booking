version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: meeting-booking-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: meeting_booking
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - meeting-booking-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d meeting_booking"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: meeting-booking-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@meetingbook.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin-config/servers.json:/pgadmin4/servers.json:ro
      - ./pgadmin-config/pgpass:/tmp/pgpassfile:ro
    networks:
      - meeting-booking-network
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      chmod 600 /tmp/pgpassfile;
      /entrypoint.sh
      "

volumes:
  postgres_data:
  pgadmin_data:

networks:
  meeting-booking-network:
    driver: bridge
